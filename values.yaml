executor: KubernetesExecutor

airflow:
  config:
    AIRFLOW__CORE__EXECUTOR: KubernetesExecutor
    AIRFLOW__KUBERNETES__NAMESPACE: airflow
    AIRFLOW__KUBERNETES__DAGS_IN_IMAGE: "True"
    AIRFLOW__KUBERNETES__DELETE_WORKER_PODS: "True"
    AIRFLOW__KUBERNETES__WORKER_CONTAINER_REPOSITORY: sirpacster/airflow-dags
    AIRFLOW__KUBERNETES__WORKER_CONTAINER_TAG: "latest"
    AIRFLOW__KUBERNETES__WORKER_CONTAINER_IMAGE_PULL_POLICY: Always

images:
  airflow:
    repository: sirpacster/airflow-dags
    tag: latest
    pullPolicy: Always
users:
  createUserJob:
    useHelmHooks: true
    command: ["bash", "-c"]
    args: ["airflow users create --username admin --password admin --firstname Admin --lastname User --role Admin --email admin@example.com"]
rbac:
  create: true

serviceAccount:
  create: true
  name: airflow-sa

scheduler:
  securityContext:
    fsGroup: 1000
  extraVolumes:
    - name: text-read-volume
      persistentVolumeClaim:
        claimName: text-read-pvc
  extraVolumeMounts:
    - name: text-read-volume
      mountPath: /mnt/data
      readOnly: false
      

webserver:
  securityContext:
    fsGroup: 1000
  extraVolumes:
    - name: text-read-volume
      persistentVolumeClaim:
        claimName: text-read-pvc
  extraVolumeMounts:
    - name: text-read-volume
      mountPath: /mnt/data
      readOnly: false
    
workers:
  securityContext:
    fsGroup: 1000
  extraVolumes:
    - name: text-read-volume
      persistentVolumeClaim:
        claimName: text-read-pvc
  extraVolumeMounts:
    - name: text-read-volume
      mountPath: /mnt/data
      readOnly: false